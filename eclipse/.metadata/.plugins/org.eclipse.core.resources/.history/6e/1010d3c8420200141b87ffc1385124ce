package sam.sandweiss.MyItems;

import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.entity.Entity;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.entity.projectile.EntitySmallFireball;
import net.minecraft.entity.projectile.EntitySnowball;
import net.minecraft.init.Blocks;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.util.DamageSource;
import net.minecraft.util.MovingObjectPosition;
import net.minecraft.world.World;

public class BlasterRifle extends Item {
	
	private Object worldObj;
	private Entity shootingEntity;

	public BlasterRifle() {
		super();
		setCreativeTab(CreativeTabs.tabCombat);
		setUnlocalizedName("blasterRifle");
	}
	
	  public ItemStack onItemRightClick(ItemStack par1ItemStack, World par2World, EntityPlayer par3EntityPlayer)
	  {
	      if (par3EntityPlayer.capabilities.isCreativeMode)
	      {
	          --par1ItemStack.stackSize;
	      }
	      par2World.playSoundAtEntity(par3EntityPlayer, "random.bow", 0.5F, 0.4F / (itemRand.nextFloat() * 0.4F + 0.8F));
	      if (!par2World.isRemote)
	      {
	          par2World.spawnEntityInWorld(new EntitySmallFireball(par2World, par3EntityPlayer, 1, 1, 1));
	      }
	      return par1ItemStack;
	  }
	  
	  protected void onImpact(MovingObjectPosition par1MovingObjectPosition)
	    {
	   
	            if (par1MovingObjectPosition.entityHit != null)
	            {
	                if (!par1MovingObjectPosition.entityHit.isImmuneToFire() && par1MovingObjectPosition.entityHit.attackEntityFrom(DamageSource.causeFireballDamage(this, this.shootingEntity), 5.0F))
	                {
	                    par1MovingObjectPosition.entityHit.setFire(5);
	                }
	            }
	            else
	            {
	                int i = par1MovingObjectPosition.blockX;
	                int j = par1MovingObjectPosition.blockY;
	                int k = par1MovingObjectPosition.blockZ;

	                switch (par1MovingObjectPosition.sideHit)
	                {
	                    case 0:
	                        --j;
	                        break;
	                    case 1:
	                        ++j;
	                        break;
	                    case 2:
	                        --k;
	                        break;
	                    case 3:
	                        ++k;
	                        break;
	                    case 4:
	                        --i;
	                        break;
	                    case 5:
	                        ++i;
	                }

	                if (EntitySmallFireBall.worldObj.isAirBlock(i, j, k))
	                {
	                    worldObj.setBlock(i, j, k, Blocks.fire);
	                }
	            }

	            this.setDead();
	        }
	    
	  
}
